{"version":3,"sources":["../../src/build/generator.js"],"names":["toCamel","string","camelized","replace","g","toUpperCase","charAt","slice","createFolder","folder","fs","existsSync","mkdirSync","console","log","createFile","name","type","content","writeFileSync","componentHTMLTemplate","componentSCSSTemplate","componentJSTemplate","controllerJSTemplate","pluginJSTemplate","module","exports","createComponent","root","done","err","error","createController","createPlugin"],"mappings":"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","file":"generator.js","sourcesContent":["/**\r\n * Transform hypen-case to camelCase\r\n * @param {String} string \r\n */\r\nfunction toCamel(string) {\r\n  let camelized = string.replace(/-([a-z])/g, g => g[1].toUpperCase())\r\n  return camelized.charAt(0).toUpperCase() + camelized.slice(1)\r\n}\r\n\r\n\r\n/**\r\n * Create component folder\r\n * @param {String} folder\r\n */\r\nfunction createFolder(folder) {\r\n  if(!fs.existsSync(folder)) {\r\n    fs.mkdirSync(folder)\r\n    console.log(`-> \"${folder}\" created`)\r\n  }\r\n  else throw `Folder \"${folder}\" already exists.`\r\n}\r\n\r\n\r\n/**\r\n * Create file\r\n * @param {String} folder\r\n * @param {String} name\r\n * @param {String} type\r\n * @param {String} content\r\n */\r\nfunction createFile(folder, name, type, content) {\r\n  fs.writeFileSync(`${folder}/${name}.${type}`, content)\r\n  console.log(`-> \"${folder}/${name}.${type}\" created`)\r\n}\r\n\r\n\r\n/**\r\n * Generate component HTML template\r\n * @param {String} name \r\n */\r\nconst componentHTMLTemplate = (name) =>\r\n`<div class=\"${name}\" data-mod=\"${name}\">\r\n\r\n</div>`\r\n\r\n\r\n/**\r\n * Generate component SCSS template\r\n * @param {String} name \r\n */\r\nconst componentSCSSTemplate = (name) =>\r\n`.${name} {\r\n\r\n}`\r\n\r\n\r\n/**\r\n * Generate component JS template\r\n * @param {String} name \r\n */\r\nconst componentJSTemplate = (name) =>\r\n`import Component from 'modulus/component'\r\n\r\nexport default class extends Component {\r\n\r\n  onInit() {\r\n\r\n  }\r\n\r\n}`\r\n\r\n\r\n/**\r\n * Generate controller JS template\r\n * @param {String} name \r\n */\r\nconst controllerJSTemplate = (name) =>\r\n`import Component from 'modulus/component'\r\n\r\nexport default class ${toCamel(name)} extends Component {\r\n\r\n  onInit() {\r\n\r\n  }\r\n\r\n}`\r\n\r\n\r\n/**\r\n * Generate plugin JS template\r\n * @param {String} name \r\n */\r\nconst pluginJSTemplate = (name) =>\r\n`import Plugin from 'modulus/plugin'\r\n\r\nexport default class ${toCamel(name)} extends Plugin {\r\n\r\n  onInit() {\r\n\r\n  }\r\n\r\n}`\r\n\r\n\r\n/**\r\n * Create an empty component\r\n * @param {String} root \r\n * @param {String} name \r\n * @param {Function} done \r\n */\r\nmodule.exports.createComponent = function(root, name, done) {\r\n  try {\r\n    console.log(`Creating \"${name}\" component:`)\r\n    createFolder(root, name)\r\n    createFile(root, name, 'html', componentHTMLTemplate(name))\r\n    createFile(root, name, 'scss', componentSCSSTemplate(name))\r\n    createFile(root, name, 'js', componentJSTemplate(name))\r\n    done()\r\n  }\r\n  catch(err) {\r\n    console.error('Cannot create component:', err)\r\n    throw err\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create an empty controller\r\n * @param {String} root \r\n * @param {String} name \r\n * @param {Function} done \r\n */\r\nmodule.exports.createController = function(root, name, done) {\r\n  try {\r\n    console.log(`Creating \"${name}\" controller:`)\r\n    createFile(root, name, 'js', controllerJSTemplate(name))\r\n    console.log(`Note: you need to register this controller in your \"main.js\"`)\r\n    done()\r\n  }\r\n  catch(err) {\r\n    console.error('Cannot create controller:', err)\r\n    throw err\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create an empty plugin\r\n * @param {String} root \r\n * @param {String} name \r\n * @param {Function} done \r\n */\r\nmodule.exports.createPlugin = function(root, name, done) {\r\n  try {\r\n    console.log(`Creating \"${name}\" plugin:`)\r\n    createFile(root, name, 'js', pluginJSTemplate(name))\r\n    console.log(`Note: you need to register this plugin in your \"main.js\"`)\r\n    done()\r\n  }\r\n  catch(err) {\r\n    console.error('Cannot create plugin:', err)\r\n    throw err\r\n  }\r\n}"]}