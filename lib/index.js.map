{"version":3,"sources":["../src/index.js"],"names":["Modulus","config","plugins","controllers","components","webComponents","_plugins","_controllers","_components","_webComponents","ready","Object","assign","debug","expose","seekAttribute","log","Logger","active","prefix","window","$mod","process","env","PRODUCTION","document","addEventListener","build","registerPlugins","registerControllers","registerComponents","initComponents","registerCustomElements","observeDestruction","emit","root","name","$modulus","Component","prototype","onSetup","onInit","instanciateComponent","body","els","querySelectorAll","i","length","getAttribute","ComponentClass","instance","$uid","error","MutationObserver","uid","contains","el","onDestroy","observe","childList","subtree","__initialized","tagname","replace","m","toLowerCase","substr","self","customElements","define","$component","onReady","HTMLElement","err","unique","attrs","attributes","refs","Array","from","concat","children","filter","child","hasAttribute","ref","dataset","id","EventEmitter"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,O;;;AAGnB;;;;;;;;;AASA,yBAAkG;AAAA,2BAApFC,MAAoF;AAAA,QAApFA,MAAoF,+BAA3E,EAA2E;AAAA,4BAAvEC,OAAuE;AAAA,QAAvEA,OAAuE,gCAA7D,EAA6D;AAAA,gCAAzDC,WAAyD;AAAA,QAAzDA,WAAyD,oCAA3C,EAA2C;AAAA,+BAAvCC,UAAuC;AAAA,QAAvCA,UAAuC,mCAA1B,EAA0B;AAAA,kCAAtBC,aAAsB;AAAA,QAAtBA,aAAsB,sCAAN,EAAM;;AAAA;;AAIhG;AAJgG;;AAKhG,UAAKC,QAAL,GAAgBJ,OAAhB;AACA,UAAKK,YAAL,GAAoBJ,WAApB;AACA,UAAKK,WAAL,GAAmBJ,UAAnB;AACA,UAAKK,cAAL,GAAsBJ,aAAtB;;AAEA;AACA,UAAKH,OAAL,GAAe,EAAf;AACA,UAAKC,WAAL,GAAmB,EAAnB;AACA,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKK,KAAL,GAAa,KAAb;;AAEA;AACA,UAAKT,MAAL,GAAcU,OAAOC,MAAP,CAAc;AAC1BC,aAAO,KADmB;AAE1BC,cAAQ,KAFkB;AAG1BC,qBAAe;AAHW,KAAd,EAIXd,MAJW,CAAd;;AAMA;AACA,UAAKe,GAAL,GAAW,IAAIC,gBAAJ,CAAW,EAAEC,QAAQ,MAAKjB,MAAL,CAAYY,KAAtB,EAA6BM,QAAQ,EAArC,EAAX,CAAX;;AAEA;AACA,QAAG,MAAKlB,MAAL,CAAYa,MAAf,EAAuB;AACrBM,aAAOC,IAAP;AACD;;AAED;AACA,UAAKL,GAAL,sBAA2BM,QAAQC,GAAR,CAAYC,UAAZ,GAAyB,MAAzB,GAAkC,KAA7D;AACAC,aAASC,gBAAT,CAA0B,kBAA1B,EAA8C;AAAA,aAAK,MAAKC,KAAL,EAAL;AAAA,KAA9C;AAlCgG;AAmCjG;;AAGD;;;;;;;4BAGQ;AACN,WAAKC,eAAL;AACA,WAAKC,mBAAL;AACA,WAAKC,kBAAL;AACA,WAAKC,cAAL;AACA,WAAKC,sBAAL;AACA,WAAKC,kBAAL;AACA,WAAKC,IAAL,CAAU,OAAV;AACD;;AAGD;;;;;;;4BAIQC,I,EAAM;AACZ,WAAKL,kBAAL,CAAwBK,IAAxB;AACA,WAAKJ,cAAL;AACA,WAAKG,IAAL,CAAU,OAAV;AACD;;AAGD;;;;;;sCAGkB;AAChB,WAAI,IAAIE,IAAR,IAAgB,KAAK9B,QAArB,EAA+B;;AAE7B;AACA,aAAKJ,OAAL,CAAakC,IAAb,IAAqB,KAAK9B,QAAL,CAAc8B,IAAd,CAArB;AACA,aAAKlC,OAAL,CAAakC,IAAb,EAAmBC,QAAnB,GAA8B,IAA9B;AACA,aAAKnC,OAAL,CAAakC,IAAb,EAAmBpB,GAAnB,GAAyB,IAAIC,gBAAJ,CAAW;AAClCC,kBAAQ,KAAKjB,MAAL,CAAYY,KADc;AAElCM,wBAAYiB,IAAZ;AAFkC,SAAX,CAAzB;;AAKA;AACAE,4BAAUC,SAAV,OAAwBH,IAAxB,IAAkC,KAAKlC,OAAL,CAAakC,IAAb,CAAlC;;AAEA;AACA,aAAKpB,GAAL,gBAAsBoB,IAAtB;AACA,YAAG,KAAKlC,OAAL,CAAakC,IAAb,EAAmBI,OAAtB,EAA+B,KAAKtC,OAAL,CAAakC,IAAb,EAAmBI,OAAnB;AAC/B,YAAG,KAAKtC,OAAL,CAAakC,IAAb,EAAmBK,MAAtB,EAA8B,KAAKvC,OAAL,CAAakC,IAAb,EAAmBK,MAAnB;AAC/B;AACF;;AAGD;;;;;;0CAGsB;AACpB,WAAI,IAAIL,IAAR,IAAgB,KAAK7B,YAArB,EAAmC;;AAEjC;AACA,aAAKJ,WAAL,CAAiBiC,IAAjB,IAAyB,KAAKM,oBAAL,CAA0BN,IAA1B,EAAgC,KAAK7B,YAAL,CAAkB6B,IAAlB,CAAhC,EAAyDX,SAASkB,IAAlE,EAAwE,IAAxE,CAAzB;;AAEA;AACA,aAAK3B,GAAL,oBAA0BoB,IAA1B;AACA,YAAG,KAAKjC,WAAL,CAAiBiC,IAAjB,EAAuBK,MAA1B,EAAkC,KAAKtC,WAAL,CAAiBiC,IAAjB,EAAuBK,MAAvB;AACnC;AACF;;AAGD;;;;;;;yCAIyC;AAAA,UAAtBN,IAAsB,uEAAfV,SAASkB,IAAM;;AACvC,UAAMC,MAAMT,KAAKU,gBAAL,OAA0B,KAAK5C,MAAL,CAAYc,aAAtC,OAAZ;AACA,WAAI,IAAI+B,IAAI,CAAZ,EAAeA,IAAIF,IAAIG,MAAvB,EAA+BD,GAA/B,EAAoC;;AAElC;AACA,YAAMV,OAAOQ,IAAIE,CAAJ,EAAOE,YAAP,CAAoB,KAAK/C,MAAL,CAAYc,aAAhC,CAAb;AACA,YAAMkC,iBAAiB,KAAKzC,WAAL,CAAiB4B,IAAjB,CAAvB;;AAEA;AACA,YAAGa,cAAH,EAAmB;;AAEjB;AACA,cAAMC,WAAW,KAAKR,oBAAL,CAA0BN,IAA1B,EAAgCa,cAAhC,EAAgDL,IAAIE,CAAJ,CAAhD,CAAjB;AACA,eAAK1C,UAAL,CAAgB8C,SAASC,IAAzB,IAAiCD,QAAjC;AACA,eAAKlC,GAAL,mBAAyBkC,SAASC,IAAlC;AACD,SAND,MAOK,KAAKnC,GAAL,CAASoC,KAAT,yBAAqChB,IAArC;AACN;AACF;;AAGD;;;;;;yCAGqB;AAAA;;AACnB,UAAIiB,gBAAJ,CAAqB,aAAK;;AAExB,aAAI,IAAIC,GAAR,IAAe,OAAKlD,UAApB,EAAgC;AAC9B,cAAG,CAACqB,SAASkB,IAAT,CAAcY,QAAd,CAAuB,OAAKnD,UAAL,CAAgBkD,GAAhB,EAAqBE,EAA5C,CAAJ,EAAqD;AACnD,gBAAG,OAAKpD,UAAL,CAAgBkD,GAAhB,EAAqBG,SAAxB,EAAmC;AACjC,qBAAKrD,UAAL,CAAgBkD,GAAhB,EAAqBG,SAArB;AACD;AACD,mBAAO,OAAKrD,UAAL,CAAgBkD,GAAhB,CAAP;AACD;AACF;AAEF,OAXD,EAWGI,OAXH,CAWWjC,SAASkB,IAXpB,EAW0B,EAAEgB,WAAW,IAAb,EAAmBC,SAAS,IAA5B,EAX1B;AAYD;;AAGD;;;;;;qCAGiB;AACf,WAAI,IAAIN,GAAR,IAAe,KAAKlD,UAApB,EAAgC;AAC9B,YAAG,KAAKA,UAAL,CAAgBkD,GAAhB,EAAqBb,MAArB,IAA+B,CAAC,KAAKrC,UAAL,CAAgBkD,GAAhB,EAAqBO,aAAxD,EAAuE;AACrE,eAAKzD,UAAL,CAAgBkD,GAAhB,EAAqBb,MAArB;AACA,eAAKrC,UAAL,CAAgBkD,GAAhB,EAAqBO,aAArB,GAAqC,IAArC;AACD;AACF;AACF;;AAGD;;;;;;6CAGyB;AAAA;;AAAA,iCACfzB,IADe;;AAGrB,YAAI;;AAEF;AACA,cAAI0B,UAAU1B,KAAK2B,OAAL,CAAa,QAAb,EAAuB;AAAA,mBAAK,MAAMC,EAAEC,WAAF,EAAX;AAAA,WAAvB,CAAd;AACA,cAAGH,QAAQ,CAAR,MAAe,GAAlB,EAAuBA,UAAUA,QAAQI,MAAR,CAAe,CAAf,CAAV;;AAEvB;AACA,cAAMjB,iBAAiB,OAAKxC,cAAL,CAAoB2B,IAApB,CAAvB;AACAa,yBAAeV,SAAf,CAAyBF,QAAzB,GAAoC,MAApC;;AAEA;AACA,cAAM8B,OAAO,MAAb;AACA,iBAAKnD,GAAL,sBAA4B8C,OAA5B;AACA1C,iBAAOgD,cAAP,CAAsBC,MAAtB,CAA6BP,OAA7B;AAAA;;AAEE;AACA,8BAAc;AAAA;;AAAA;;AAEZ,kBAAMZ,WAAWiB,KAAKzB,oBAAL,CAA0BN,IAA1B,EAAgCa,cAAhC,SAAjB;AACAkB,mBAAK/D,UAAL,CAAgB8C,SAASC,IAAzB,IAAiCD,QAAjC;AAHY;AAIb;;AAED;;;AATF;AAAA;AAAA,kDAUsB;AAClB,oBAAG,KAAKoB,UAAL,CAAgB7B,MAAnB,EAA2B,KAAK6B,UAAL,CAAgB7B,MAAhB;AAC3B,oBAAG0B,KAAKzD,KAAL,IAAc,KAAK4D,UAAL,CAAgBC,OAAjC,EAA0C,KAAKD,UAAL,CAAgBC,OAAhB;AAC3C;;AAED;;AAfF;AAAA;AAAA,qDAgByB;AACrB,oBAAG,KAAKD,UAAL,CAAgBb,SAAnB,EAA8B,KAAKa,UAAL,CAAgBb,SAAhB;AAC/B;AAlBH;;AAAA;AAAA,YAAoDe,WAApD;AAqBD,SAlCD,CAmCA,OAAMC,GAAN,EAAW;AACT,iBAAKzD,GAAL,CAASoC,KAAT,CAAeqB,GAAf;AACA;AACD;AAzCoB;;AACvB,WAAI,IAAIrC,IAAR,IAAgB,KAAK3B,cAArB,EAAqC;AAAA,yBAA7B2B,IAA6B;;AAAA,iCAuCjC;AAGH;AACF;;AAGD;;;;;;;;;;;yCAQqBA,I,EAAMa,c,EAAgBO,E,EAAoB;AAAA,UAAhBkB,MAAgB,uEAAP,KAAO;;;AAE7D;AACA,UAAMC,QAAQ,EAAd;AACA,WAAI,IAAI7B,IAAI,CAAZ,EAAeA,IAAIU,GAAGoB,UAAH,CAAc7B,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C6B,cAAMnB,GAAGoB,UAAH,CAAc9B,CAAd,CAAN,IAA0BU,GAAGR,YAAH,CAAgBQ,GAAGoB,UAAH,CAAc9B,CAAd,CAAhB,CAA1B;AACD;;AAED;AACA,UAAM+B,OAAO,EAAb;AACA,UAAMjC,MAAMkC,MAAMC,IAAN,CAAWvB,GAAGX,gBAAH,aAA8B,KAAK5C,MAAL,CAAYc,aAA1C,cAAX,CAAZ;AACA6B,UAAIoC,MAAJ,+BAAcF,MAAMC,IAAN,CAAWvB,GAAGyB,QAAd,EAAwBC,MAAxB,CAA+B;AAAA,eAASC,MAAMC,YAAN,CAAmB,KAAnB,CAAT;AAAA,OAA/B,CAAd,GAX6D,CAWqB;AAClF,WAAI,IAAItC,KAAI,CAAZ,EAAeA,KAAIF,IAAIG,MAAvB,EAA+BD,IAA/B,EAAoC;AAClC,YAAMuC,MAAMzC,IAAIE,EAAJ,EAAOE,YAAP,CAAoB,KAApB,CAAZ;AACA6B,aAAKQ,GAAL,IAAYzC,IAAIE,EAAJ,CAAZ;AACD;;AAED;AACA,UAAMI,WAAW,IAAID,cAAJ,CAAmBO,EAAnB,EAAuB,EAAEmB,YAAF,EAASE,UAAT,EAAeS,SAAS9B,GAAG8B,OAA3B,EAAvB,CAAjB;;AAEA;AACApC,eAASC,IAAT,GAAiBuB,MAAD,GAAWtC,IAAX,GAAqBA,IAArB,UAA6BoB,GAAG+B,EAAH,IAAS,yBAAtC,CAAhB;;AAEA;AACArC,eAASlC,GAAT,GAAe,IAAIC,gBAAJ,CAAW,EAAEC,QAAQ,KAAKjB,MAAL,CAAYY,KAAtB,EAA6BM,cAAY+B,SAASC,IAArB,MAA7B,EAAX,CAAf;;AAEA;AACAD,eAASb,QAAT,GAAoB,IAApB;;AAEA;AACAmB,SAAGc,UAAH,GAAgBpB,QAAhB;;AAEA,aAAOA,QAAP;AACD;;AAGD;;;;;;;;wBAKII,G,EAAK;AACP,aAAO,KAAKlD,UAAL,CAAgBkD,GAAhB,CAAP;AACD;;;;EAlRkCkC,qB;;kBAAhBxF,O","file":"index.js","sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport Component from './component'\r\nimport Logger from './logger'\r\nimport { randomHash } from './utils/string'\r\n\r\nexport default class Modulus extends EventEmitter {\r\n\r\n\r\n  /**\r\n   * New Modulus instance\r\n   * @param {Object} opts \r\n   * @param {Object}  opts.config\r\n   * @param {Object}  opts.plugins - list of plugins to register\r\n   * @param {Object}  opts.controllers - list of controller to register\r\n   * @param {Object}  opts.components - list of regular components to register\r\n   * @param {Object}  opts.webComponents - list of web components to register\r\n   */\r\n  constructor({ config = {}, plugins = {}, controllers = {}, components = {}, webComponents = {} }) {\r\n\r\n    super()\r\n\r\n    // catalog of available classes\r\n    this._plugins = plugins\r\n    this._controllers = controllers\r\n    this._components = components\r\n    this._webComponents = webComponents\r\n\r\n    // catalog of instances\r\n    this.plugins = {}\r\n    this.controllers = {}\r\n    this.components = {}\r\n    this.webComponents = {}\r\n    this.ready = false\r\n\r\n    // assign config\r\n    this.config = Object.assign({\r\n      debug: false,\r\n      expose: false,\r\n      seekAttribute: 'data-mod'\r\n    }, config)\r\n\r\n    // assign logger\r\n    this.log = new Logger({ active: this.config.debug, prefix: '' })\r\n\r\n    // assign itself to window object if expose requested\r\n    if(this.config.expose) {\r\n      window.$mod = this\r\n    }\r\n\r\n    // start parsing\r\n    this.log(`Modulus start (${process.env.PRODUCTION ? 'PROD' : 'DEV'} mode)`)\r\n    document.addEventListener('DOMContentLoaded', e => this.build())\r\n  }\r\n\r\n\r\n  /**\r\n   * Build plugins, controller and components\r\n   */\r\n  build() {\r\n    this.registerPlugins()\r\n    this.registerControllers()\r\n    this.registerComponents()\r\n    this.initComponents()\r\n    this.registerCustomElements()\r\n    this.observeDestruction()\r\n    this.emit('ready')\r\n  }\r\n\r\n\r\n  /**\r\n   * Rebuild components\r\n   * @param {HTMLElement} root\r\n   */\r\n  rebuild(root) {\r\n    this.registerComponents(root)\r\n    this.initComponents()\r\n    this.emit('ready')\r\n  }\r\n\r\n\r\n  /**\r\n   * Add plugins\r\n   */\r\n  registerPlugins() {\r\n    for(let name in this._plugins) {\r\n\r\n      // attach plugin to modulus and vice-versa\r\n      this.plugins[name] = this._plugins[name]\r\n      this.plugins[name].$modulus = this\r\n      this.plugins[name].log = new Logger({\r\n        active: this.config.debug,\r\n        prefix: `<${name}>`\r\n      })\r\n\r\n      // attach plugin to Component class\r\n      Component.prototype[`$${name}`] = this.plugins[name]\r\n\r\n      // init plugin\r\n      this.log(`- plugin <${name}> registered`)\r\n      if(this.plugins[name].onSetup) this.plugins[name].onSetup()\r\n      if(this.plugins[name].onInit) this.plugins[name].onInit()\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Register controller components\r\n   */\r\n  registerControllers() {\r\n    for(let name in this._controllers) {\r\n\r\n      // instanciate controller component\r\n      this.controllers[name] = this.instanciateComponent(name, this._controllers[name], document.body, true)\r\n\r\n      // init controller\r\n      this.log(`- controller [${name}] registered`)\r\n      if(this.controllers[name].onInit) this.controllers[name].onInit()\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Parse document and instanciate all components in [data-mod] attributes\r\n   * @param {HTMLElement} root\r\n   */\r\n  registerComponents(root = document.body) {\r\n    const els = root.querySelectorAll(`[${this.config.seekAttribute}]`)\r\n    for(let i = 0; i < els.length; i++) {\r\n\r\n      // seek related module class\r\n      const name = els[i].getAttribute(this.config.seekAttribute)\r\n      const ComponentClass = this._components[name]\r\n\r\n      // register component instance\r\n      if(ComponentClass) {\r\n\r\n        // new regular component\r\n        const instance = this.instanciateComponent(name, ComponentClass, els[i])\r\n        this.components[instance.$uid] = instance\r\n        this.log(`- component [${instance.$uid}] registered`)\r\n      }\r\n      else this.log.error(`Unknown component [${name}]`)\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Observe component removal from DOM\r\n   */\r\n  observeDestruction() {\r\n    new MutationObserver(e => {\r\n\r\n      for(let uid in this.components) {\r\n        if(!document.body.contains(this.components[uid].el)) {\r\n          if(this.components[uid].onDestroy) {\r\n            this.components[uid].onDestroy()\r\n          }\r\n          delete this.components[uid]\r\n        }\r\n      }\r\n\r\n    }).observe(document.body, { childList: true, subtree: true })\r\n  }\r\n\r\n\r\n  /**\r\n   * Run onInit on regular components\r\n   */\r\n  initComponents() {\r\n    for(let uid in this.components) {\r\n      if(this.components[uid].onInit && !this.components[uid].__initialized) {\r\n        this.components[uid].onInit()\r\n        this.components[uid].__initialized = true\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Register components as native custom elements\r\n   */\r\n  registerCustomElements() {\r\n    for(let name in this._webComponents) {\r\n\r\n      try {\r\n\r\n        // hyphenize tag name (FooBar -> foo-bar)\r\n        let tagname = name.replace(/[A-Z]/g, m => '-' + m.toLowerCase())\r\n        if(tagname[0] === '-') tagname = tagname.substr(1)\r\n\r\n        // attach modulus instance to component\r\n        const ComponentClass = this._webComponents[name]\r\n        ComponentClass.prototype.$modulus = this\r\n\r\n        // register to custom elements registry\r\n        const self = this\r\n        this.log(`Custom Element [${tagname}] registered`)\r\n        window.customElements.define(tagname, class extends HTMLElement {\r\n\r\n          // new web component\r\n          constructor() {\r\n            super()\r\n            const instance = self.instanciateComponent(name, ComponentClass, this)\r\n            self.components[instance.$uid] = instance\r\n          }\r\n\r\n          // attached to DOM\r\n          connectedCallback() {\r\n            if(this.$component.onInit) this.$component.onInit()\r\n            if(self.ready && this.$component.onReady) this.$component.onReady()\r\n          }\r\n\r\n          // detached from DOM\r\n          disconnectedCallback() {\r\n            if(this.$component.onDestroy) this.$component.onDestroy()\r\n          }\r\n\r\n        })\r\n      }\r\n      catch(err) {\r\n        this.log.error(err)\r\n        continue\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Instance component and bind related data\r\n   * @param {String} name \r\n   * @param {Component} ModuleClass \r\n   * @param {HTMLElement} el \r\n   * @param {Boolean} unique \r\n   * @return {Component}\r\n   */\r\n  instanciateComponent(name, ComponentClass, el, unique = false) {\r\n\r\n    // parse attributes and data-attributes\r\n    const attrs = {}\r\n    for(let i = 0; i < el.attributes.length; i++) {\r\n      attrs[el.attributes[i]] = el.getAttribute(el.attributes[i])\r\n    }\r\n\r\n    // lookup [ref] children\r\n    const refs = {}\r\n    const els = Array.from(el.querySelectorAll(`*:not([${this.config.seekAttribute}]) [ref]`))\r\n    els.concat(...Array.from(el.children).filter(child => child.hasAttribute('ref'))) // ie11 fix for direct child ref\r\n    for(let i = 0; i < els.length; i++) {\r\n      const ref = els[i].getAttribute('ref')\r\n      refs[ref] = els[i]\r\n    }\r\n\r\n    // instanciate component object with attributes\r\n    const instance = new ComponentClass(el, { attrs, refs, dataset: el.dataset })\r\n\r\n    // bind identity data to instance\r\n    instance.$uid = (unique) ? name : `${name}#${el.id || randomHash()}`\r\n\r\n    // bind logger to instance\r\n    instance.log = new Logger({ active: this.config.debug, prefix: `[${instance.$uid}]` })\r\n\r\n    // bind modulus to instance (needed for event dispatching)\r\n    instance.$modulus = this\r\n\r\n    // bind instance to element\r\n    el.$component = instance\r\n\r\n    return instance\r\n  }\r\n\r\n\r\n  /**\r\n   * Get component by uid\r\n   * @param {String} uid \r\n   * @return {Component}\r\n   */\r\n  get(uid) {\r\n    return this.components[uid]\r\n  }\r\n\r\n}"]}