{"version":3,"sources":["../../src/plugins/router.js"],"names":["Router","config","transitions","container","fallback","transition","loading","el","document","querySelector","location","protocol","log","error","pjax","Pjax","selectors","switches","before","after","opts","onSwap","cacheBust","addEventListener","onLoading","e","onError","err","body","classList","add","url","loadUrl","href","remove","name","triggerElement","dataset","$emit","enter","then","innerHTML","onSwitch","$modulus","rebuild","onLoaded","leave","request","responseURL","Plugin"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,M;;;AAEnB,wBAA4E;AAAA,QAA9DC,MAA8D,QAA9DA,MAA8D;AAAA,QAAtDC,WAAsD,QAAtDA,WAAsD;AAAA,8BAAzCC,SAAyC;AAAA,QAAzCA,SAAyC,kCAA7B,MAA6B;AAAA,6BAArBC,QAAqB;AAAA,QAArBA,QAAqB,iCAAV,MAAU;;AAAA;;AAAA;;AAG1E,UAAKD,SAAL,GAAiBA,SAAjB;AACA,UAAKD,WAAL,GAAmBA,WAAnB;AACA,UAAKE,QAAL,GAAgBA,QAAhB;AACA,UAAKH,MAAL,GAAcA,MAAd;;AAEA,UAAKI,UAAL,GAAkB,IAAlB;AACA,UAAKC,OAAL,GAAe,IAAf;AACA,UAAKC,EAAL,GAAUC,SAASC,aAAT,CAAuB,MAAKN,SAA5B,CAAV;AAV0E;AAW3E;;AAGD;;;;;;;6BAGS;AAAA;;AAEP;AACA,UAAGO,SAASC,QAAT,KAAsB,OAAzB,EAAkC;AAChC,aAAKC,GAAL,CAASC,KAAT,CAAe,iEAAf;AACA;AACD;;AAED;AACA,WAAKC,IAAL,GAAY,IAAIC,cAAJ,CAAS;AACnBC,mBAAW,CAAC,OAAD,EAAU,KAAKb,SAAf,CADQ;AAEnBc,sCACG,KAAKd,SADR,EACoB,UAACe,MAAD,EAASC,KAAT,EAAgBC,IAAhB;AAAA,iBAAyB,OAAKC,MAAL,CAAYH,MAAZ,EAAoBC,KAApB,EAA2BC,IAA3B,CAAzB;AAAA,SADpB,CAFmB;AAKnBE,mBAAW;AACX;AANmB,OAAT,CAAZ;;AASA;AACAd,eAASe,gBAAT,CAA0B,WAA1B,EAAuC;AAAA,eAAK,OAAKC,SAAL,CAAeC,CAAf,CAAL;AAAA,OAAvC;;AAEA;AACAjB,eAASe,gBAAT,CAA0B,YAA1B,EAAwC;AAAA,eAAO,OAAKG,OAAL,CAAaC,GAAb,CAAP;AAAA,OAAxC;;AAEA;AACAnB,eAASoB,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B;AACD;;AAGD;;;;;;;;uBAKGC,G,EAAKX,I,EAAM;AACZ,UAAG,KAAKN,IAAR,EAAc,KAAKA,IAAL,CAAUkB,OAAV,CAAkBD,GAAlB,EAAuBX,IAAvB,EAAd,KACKV,SAASuB,IAAT,GAAgBF,GAAhB;AACN;;AAGD;;;;;;;8BAIUN,C,EAAG;;AAEX;AACAjB,eAASoB,IAAT,CAAcC,SAAd,CAAwBK,MAAxB,CAA+B,SAA/B;AACA1B,eAASoB,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;;AAEA;AACA,UAAIK,OAAO,IAAX;;AAEA;AACA,UAAGV,EAAEpB,UAAL,EAAiB;AACf8B,eAAOV,EAAEpB,UAAT;AACD;AACD;AAHA,WAIK,IAAGoB,EAAEW,cAAL,EAAqB;AACxBD,iBAAOV,EAAEW,cAAF,CAAiBC,OAAjB,CAAyBhC,UAAhC;AACD;;AAED;AACA,UAAG,CAAC,KAAKH,WAAL,CAAiBiC,IAAjB,CAAJ,EAA4B;AAC1BA,eAAO,KAAK/B,QAAZ;AACD;;AAED;AACA,WAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBiC,IAAjB,CAAlB;;AAEA;AACA,WAAKvB,GAAL,CAAS,cAAT,EAAyBuB,IAAzB;AACA,WAAKG,KAAL,CAAW,cAAX,EAA2BH,IAA3B;AACA,WAAK7B,OAAL,GAAe,KAAKD,UAAL,CAAgBkC,KAAhB,CAAsB,KAAKhC,EAA3B,CAAf,CA7BW,CA6BmC;AAC/C;;AAGD;;;;;;;;;2BAMOW,M,EAAQC,K,EAAO;AAAA;;AACpB,WAAKb,OAAL,CAAakC,IAAb,CAAkB,YAAM;;AAEtB;AACA,eAAK5B,GAAL,CAAS,eAAT;AACA,eAAK0B,KAAL,CAAW,eAAX,EAA4BpB,MAA5B;AACAA,eAAOuB,SAAP,GAAmBtB,MAAMsB,SAAzB;;AAEA;AACA,eAAK3B,IAAL,CAAU4B,QAAV;AACA,eAAKC,QAAL,CAAcC,OAAd,CAAsB1B,MAAtB;;AAEA;AACA,eAAK2B,QAAL;AACD,OAbD;AAcD;;AAGD;;;;;;+BAGW;AAAA;;AAET;AACArC,eAASoB,IAAT,CAAcC,SAAd,CAAwBK,MAAxB,CAA+B,UAA/B;AACA1B,eAASoB,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B;;AAEA;AACA,WAAKlB,GAAL,CAAS,aAAT;AACA,WAAK0B,KAAL,CAAW,aAAX,EAA0B,KAAK/B,EAA/B;AACA,WAAKF,UAAL,CAAgByC,KAAhB,CAAsB,KAAKvC,EAA3B,EAA+BiC,IAA/B,CAAoC,YAAM;AACxC,eAAKnC,UAAL,GAAkB,IAAlB;AACA,eAAKC,OAAL,GAAe,IAAf;AACD,OAHD;AAID;;AAGD;;;;;;;4BAIQqB,G,EAAK;;AAEX;AACA,WAAKf,GAAL,CAASC,KAAT,CAAec,GAAf;AACAjB,eAASuB,IAAT,GAAgBN,IAAIoB,OAAJ,CAAYC,WAA5B;AACD;;;;EApJiCC,gB;;kBAAfjD,M","file":"router.js","sourcesContent":["import Plugin from '../plugin'\r\nimport Pjax from 'pjax'\r\n\r\nexport default class Router extends Plugin {\r\n\r\n  constructor({ config, transitions, container = 'main', fallback = 'noop' }) {\r\n    super()\r\n\r\n    this.container = container\r\n    this.transitions = transitions\r\n    this.fallback = fallback\r\n    this.config = config\r\n\r\n    this.transition = null\r\n    this.loading = null\r\n    this.el = document.querySelector(this.container)\r\n  }\r\n\r\n\r\n  /**\r\n   * Build plugin necessities\r\n   */\r\n  onInit() {\r\n\r\n    // do not load pjax if browse from local files\r\n    if(location.protocol === 'file:') {\r\n      this.log.error('cannot load PJax on file:// protocol, please setup a web server')\r\n      return\r\n    }\r\n\r\n    // instanciate pjax\r\n    this.pjax = new Pjax({\r\n      selectors: ['title', this.container],\r\n      switches: {\r\n        [this.container]: (before, after, opts) => this.onSwap(before, after, opts)\r\n      },\r\n      cacheBust: false,\r\n      //debug: this.$modulus.config.debug\r\n    })\r\n\r\n    // listen globally for start event\r\n    document.addEventListener('pjax:send', e => this.onLoading(e))\r\n\r\n    // listen globally for error\r\n    document.addEventListener('pjax:error', err => this.onError(err))\r\n\r\n    // add initial class on body\r\n    document.body.classList.add('-loaded')\r\n  }\r\n\r\n\r\n  /**\r\n   * Change url\r\n   * @param {String} url\r\n   * @param {Object} opts\r\n   */\r\n  go(url, opts) {\r\n    if(this.pjax) this.pjax.loadUrl(url, opts)\r\n    else location.href = url\r\n  }\r\n\r\n\r\n  /**\r\n   * Transition is starting\r\n   * @param {Object} e\r\n   */\r\n  onLoading(e) {\r\n\r\n    // change body classes\r\n    document.body.classList.remove('-loaded')\r\n    document.body.classList.add('-loading')\r\n\r\n    // resolve transition name\r\n    let name = null\r\n\r\n    // transition from go() method\r\n    if(e.transition) {\r\n      name = e.transition\r\n    }\r\n    // transition from element attribute\r\n    else if(e.triggerElement) {\r\n      name = e.triggerElement.dataset.transition\r\n    }\r\n\r\n    // default transition name\r\n    if(!this.transitions[name]) {\r\n      name = this.fallback\r\n    }\r\n\r\n    // get transition by name\r\n    this.transition = this.transitions[name]\r\n\r\n    // start transition\r\n    this.log('route change', name)\r\n    this.$emit('route.change', name)\r\n    this.loading = this.transition.enter(this.el) // assume promise\r\n  }\r\n\r\n\r\n  /**\r\n   * Next page is loaded, replace content\r\n   * @param {HTMLElement} before\r\n   * @param {HTMLElement} after\r\n   * @param {Object} opts\r\n   */\r\n  onSwap(before, after) {\r\n    this.loading.then(() => {\r\n\r\n      // replace content\r\n      this.log('dom destroyed')\r\n      this.$emit('dom.destroyed', before)\r\n      before.innerHTML = after.innerHTML\r\n\r\n      // rebuild modulus\r\n      this.pjax.onSwitch()\r\n      this.$modulus.rebuild(before)\r\n\r\n      // end transition\r\n      this.onLoaded()\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * End transition\r\n   */\r\n  onLoaded() {\r\n\r\n    // change body classes\r\n    document.body.classList.remove('-loading')\r\n    document.body.classList.add('-loaded')\r\n\r\n    // end transition\r\n    this.log('dom updated')\r\n    this.$emit('dom.updated', this.el)\r\n    this.transition.leave(this.el).then(() => {\r\n      this.transition = null\r\n      this.loading = null\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle request error\r\n   * @param {Object} err \r\n   */\r\n  onError(err) {\r\n\r\n    // force redirection in any errors\r\n    this.log.error(err)\r\n    location.href = err.request.responseURL\r\n  }\r\n\r\n}"]}