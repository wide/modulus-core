{"version":3,"sources":["../../src/plugins/scroll.js"],"names":["Scroll","config","progresses","stickied","state","up","down","value","progress","attributes","attrScrollTo","attrParallax","attrSticky","computeScroll","$emit","window","scrollY","target","opts","document","body","classList","add","documentElement","style","overflowY","remove","from","to","callback","el","push","i","findIndex","p","coef","axis","bodyRect","getBoundingClientRect","rect","offsetTop","top","boundStart","innerHeight","boundEnd","height","_axis","toUpperCase","_sign","substr","transform","instance","stickyBitStickyOffset","parseInt","dataset","useStickyClasses","parentClass","stickyClass","stuckClass","stickyChangeClass","a","cleanup","Plugin"],"mappings":"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","file":"scroll.js","sourcesContent":["import Plugin from '../plugin'\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock' \r\nimport updateOnScroll from 'uos'\r\nimport sticky from 'stickybits'\r\nimport jump from 'jump.js'\r\n\r\nimport attrScrollTo from './scroll/attr-scroll-to'\r\nimport attrParallax from './scroll/attr-parallax'\r\nimport attrSticky from './scroll/attr-sticky'\r\n\r\nexport default class Scroll extends Plugin {\r\n\r\n  constructor({ config } = {}) {\r\n    super()\r\n\r\n    this.progresses = []\r\n    this.stickied = []\r\n    this.state = {\r\n      up: false,\r\n      down: false,\r\n      value: 0,\r\n      progress: 0\r\n    }\r\n    \r\n    this.config = config\r\n    this.attributes = {\r\n      'data-scroll-to': attrScrollTo,\r\n      'data-parallax': attrParallax,\r\n      'data-sticky': attrSticky\r\n    }\r\n  }\r\n  \r\n\r\n  /**\r\n   * Build plugin necessities\r\n   */\r\n  onInit() {\r\n    \r\n    // set first state\r\n    this.computeScroll(0)\r\n\r\n    // on scroll, recompute\r\n    this.progress(0.0, 1.0, progress => {\r\n      this.computeScroll(progress)\r\n      this.$emit('scroll', this.state)\r\n    })\r\n  }\r\n\r\n  \r\n  /**\r\n   * Compute current scroll state\r\n   * @param {Number} progress \r\n   */\r\n  computeScroll(progress) {\r\n    this.state = {\r\n      up: (window.scrollY < this.state.value),\r\n      down: (window.scrollY > this.state.value),\r\n      value: window.scrollY,\r\n      progress\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Scroll to specific element in page\r\n   * @param {HTMLElement|String} target \r\n   * @para {Object} tops\r\n   */\r\n  to(target, opts) {\r\n    jump(target, opts)\r\n  }\r\n\r\n\r\n  /**\r\n   * Lock scroll\r\n   * @param {HTMLElement} target\r\n   */\r\n  lock(target) {\r\n    document.body.classList.add('-locked')\r\n    document.documentElement.style.overflowY = 'hidden'\r\n    disableBodyScroll(target)\r\n  }\r\n\r\n  \r\n  /**\r\n   * Unlock scroll\r\n   */\r\n  unlock() {\r\n    document.body.classList.remove('-locked')\r\n    document.documentElement.style.overflowY = 'scroll'\r\n    clearAllBodyScrollLocks()\r\n  }\r\n\r\n\r\n  /**\r\n   * Trigger a callback on every scroll event between 2 positions\r\n   * @param {Number|String} from position (can be percent: 0.5, or px: 100)\r\n   * @param {Number|String} to position (can be percent: 0.5, or px: 100)\r\n   * @param {Function} callback \r\n   */\r\n  progress(from, to, callback, el) {\r\n    this.progresses.push({\r\n      el, callback,\r\n      remove: updateOnScroll(from, to, callback)\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete progress listeners\r\n   * @param {Function} callback \r\n   */\r\n  clearProgress(callback) {\r\n    const i = this.progresses.findIndex(p => p.callback == callback)\r\n    if(i >= 0) this.progresses[i].remove()\r\n  }\r\n\r\n\r\n  /**\r\n   * Add parallax effect on element depending on the scroll value\r\n   * @param {HTMLElement} el \r\n   * @param {Float} coef \r\n   */\r\n  parallax(el, { coef = .4, axis = 'Y' } = {}) {\r\n\r\n    const bodyRect = document.body.getBoundingClientRect()\r\n    const rect = el.getBoundingClientRect()\r\n\r\n    // compute boudings\r\n    const offsetTop = rect.top - bodyRect.top\r\n    const boundStart = offsetTop - window.innerHeight\r\n    const boundEnd = offsetTop + rect.height\r\n\r\n    // resolve axis\r\n    let _axis = axis.toUpperCase()\r\n    let _sign = ''\r\n\r\n    // reverse direction\r\n    if(_axis[0] === '-') {\r\n      _sign = '-'\r\n      _axis = _axis.substr(1)\r\n    }\r\n\r\n    this.progress(boundStart, boundEnd, progress => {\r\n      el.style.transform = `translateZ(0) translate${_axis}(${_sign}${progress * (100 * coef)}%)`\r\n    }, el)\r\n  }\r\n\r\n\r\n  /**\r\n   * Clear parallax listeners\r\n   * @param {HTMLElement} el \r\n   */\r\n  clearParallax(el) {\r\n    const i = this.progresses.findIndex(p => p.el == el)\r\n    if(i >= 0) this.progresses[i].remove()\r\n  }\r\n\r\n\r\n  /**\r\n   * Set element sticky when entering parent viewport\r\n   * @param {HTMLElement} el \r\n   */\r\n  sticky(el) {\r\n    this.stickied.push({\r\n      el, instance: sticky(el, {\r\n        stickyBitStickyOffset: parseInt(el.dataset['sticky.offset']) || 0,\r\n        useStickyClasses: true,\r\n        parentClass: '-sticky-parent',\r\n        stickyClass: '-sticky',\r\n        stuckClass: '-sticky-stuck',\r\n        stickyChangeClass: '-sticky'\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Clear sticky handler for an element\r\n   * @param {HTMLElement} el \r\n   */\r\n  clearSticky(el) {\r\n    const i = this.stickied.findIndex(a => a.el == el)\r\n    if(i >= 0) this.stickied[i].instance.cleanup()\r\n  }\r\n\r\n}"]}