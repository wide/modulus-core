{"version":3,"sources":["../../../src/plugins/viewport/attr-anim.js"],"names":["watch","$viewport","els","i","name","dataset","anim","isJS","substr","when","offset","config","animOffset","staggering","hasAttribute","opts","split","forEach","o","observe","target","scope","once","enter","leave","callback","el","entry","verb","isIntersecting","animations","children","classList","remove","add","length","clear"],"mappings":";;;;;kBAAe;;AAEb;;;;;;;;;;;AAWAA,OAba,iBAaPC,SAbO,EAaIC,GAbJ,EAaS;AAAA,+BACZC,CADY;;AAGlB;AACA,UAAIC,OAAOF,IAAIC,CAAJ,EAAOE,OAAP,CAAeC,IAA1B;AACA,UAAMC,OAAOH,KAAK,CAAL,MAAY,GAAzB;AACAA,aAAOG,OAAOH,KAAKI,MAAL,CAAY,CAAZ,CAAP,GAAwBJ,IAA/B;;AAEA;AACA,UAAMK,OAAOP,IAAIC,CAAJ,EAAOE,OAAP,CAAe,WAAf,KAA+B,EAA5C;AACA,UAAMK,SAASR,IAAIC,CAAJ,EAAOE,OAAP,CAAe,aAAf,KAAiCJ,UAAUU,MAAV,CAAiBC,UAAjE;AACA,UAAMC,aAAaX,IAAIC,CAAJ,EAAOW,YAAP,qBAAnB;;AAEA;AACA,UAAMC,OAAO,EAAb;AACAN,WAAKO,KAAL,CAAW,GAAX,EAAgBC,OAAhB,CAAwB;AAAA,eAAKF,KAAKG,CAAL,IAAU,IAAf;AAAA,OAAxB;;AAEA;AACAjB,gBAAUkB,OAAV,CAAkB;AAChBC,gBAAQlB,IAAIC,CAAJ,CADQ;AAEhBkB,eAAON,KAAKM,KAFI;AAGhBC,cAAMP,KAAKO,IAHK;AAIhBC,eAAOR,KAAKQ,KAJI;AAKhBC,eAAOT,KAAKS,KALI;AAMhBd,sBANgB;AAOhBe,gBAPgB,oBAOPC,EAPO,EAOHC,KAPG,EAOI;;AAElB;AACA,cAAGpB,IAAH,EAAS;AACP,gBAAMqB,OAAQD,MAAME,cAAP,GAAyB,OAAzB,GAAmC,OAAhD;AACA,gBAAG5B,UAAU6B,UAAV,CAAqB1B,IAArB,EAA2BwB,IAA3B,CAAH,EAAqC;AACnC3B,wBAAU6B,UAAV,CAAqB1B,IAArB,EAA2BwB,IAA3B,EAAiCf,aAAaa,GAAGK,QAAhB,GAA2BL,EAA5D;AACD;AACF;AACD;AANA,eAOK;AACH,kBAAGC,MAAME,cAAT,EAAyB;AACvBH,mBAAGM,SAAH,CAAaC,MAAb,CAAuB7B,IAAvB;AACAsB,mBAAGM,SAAH,CAAaE,GAAb,CAAoB9B,IAApB;AACD,eAHD,MAIK;AACHsB,mBAAGM,SAAH,CAAaC,MAAb,CAAuB7B,IAAvB;AACAsB,mBAAGM,SAAH,CAAaE,GAAb,CAAoB9B,IAApB;AACD;AACF;AAEF;AA5Be,OAAlB;AAlBkB;;AACpB,SAAI,IAAID,IAAI,CAAZ,EAAeA,IAAID,IAAIiC,MAAvB,EAA+BhC,GAA/B,EAAoC;AAAA,YAA5BA,CAA4B;AA+CnC;AACF,GA9DY;AAgEbiC,OAhEa,mBAgEL,CAAE;AAhEG,C","file":"attr-anim.js","sourcesContent":["export default {\r\n\r\n  /**\r\n   * Observe `data-anim` attribute\r\n   * @param {Viewport} $viewport\r\n   *\r\n   * <div data-anim=\"fade\"                    will add `.fade-enter` and `.fade-leave` on transition\r\n   *      data-anim.when=\"enter|leave\"\r\n   *      data-anim.offset=\"-100px\"\r\n   * >...</div>\r\n   *\r\n   * For JS transition, prefix the name with `@`: `<div data-anim=\"@fade\">`, will call `fade.enter()` and `fade.leave()`\r\n   */\r\n  watch($viewport, els) {\r\n    for(let i = 0; i < els.length; i++) {\r\n  \r\n      // get transition name\r\n      let name = els[i].dataset.anim\r\n      const isJS = name[0] === '@'\r\n      name = isJS ? name.substr(1) : name\r\n  \r\n      // get transition options\r\n      const when = els[i].dataset['anim.when'] || ''\r\n      const offset = els[i].dataset['anim.offset'] || $viewport.config.animOffset\r\n      const staggering = els[i].hasAttribute(`data-anim.stagger`)\r\n  \r\n      // parse when options\r\n      const opts = {}\r\n      when.split('|').forEach(o => opts[o] = true)\r\n  \r\n      // create observer\r\n      $viewport.observe({\r\n        target: els[i],\r\n        scope: opts.scope,\r\n        once: opts.once,\r\n        enter: opts.enter,\r\n        leave: opts.leave,\r\n        offset,\r\n        callback(el, entry) {\r\n  \r\n          // JS transition\r\n          if(isJS) {\r\n            const verb = (entry.isIntersecting) ? 'enter' : 'leave'\r\n            if($viewport.animations[name][verb]) {\r\n              $viewport.animations[name][verb](staggering ? el.children : el)\r\n            }\r\n          }\r\n          // CSS transition\r\n          else {\r\n            if(entry.isIntersecting) {\r\n              el.classList.remove(`${name}-leave`)\r\n              el.classList.add(`${name}-enter`)\r\n            }\r\n            else {\r\n              el.classList.remove(`${name}-enter`)\r\n              el.classList.add(`${name}-leave`)\r\n            }\r\n          }\r\n  \r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  clear() {}\r\n\r\n}"]}