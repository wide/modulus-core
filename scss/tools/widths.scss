// =============================================================================
// 2# Modulus / Tools / Widths
// =============================================================================

///
/// Generate a series of width helper classes
///
/// @example scss
///     @include widths(12);
///
/// @example html
///    <div class="w-7/12">
///
/// @example scss
///     @include widths(3 4, sm);
///
/// @example html
///    <div class="w-2/3@sm">
///
/// @link     https://github.com/inuitcss/inuitcss/commit/6eb574f/utilities/_utilities.widths.scss
/// @requires {Function} important
/// @requires {Function} $widths-offsets
/// @requires {Function} $fractions-delimiter
/// @requires {Function} $breakpoint-delimiter
/// @param    {List}     $colums     - The columns we want the widths to have.
/// @param    {String}   $breakpoint - Optional suffix for responsive widths.
/// @output   `width`, `position`, `right`, `left`
///
@mixin widths($columns, $breakpoint: null, $important: true) {
  $important: important($important);

  // loop through the number of columns for each denominator of our fractions
  @each $denominator in $columns {

    // begin creating a numerator for our fraction up until
    // we hit the denominator
    @for $numerator from 1 through $denominator {

      // build a class in the format `.w-3/4[@<breakpoint>]`
      .w-#{$numerator}#{$fractions-delimiter}#{$denominator}#{$breakpoint} {
        width: ($numerator / $denominator) * 100% $important;
      }

      @if ($widths-offsets == true) {
        // build a class in the format `.w-push-1/2[@<breakpoint>]`
        .w-push-#{$numerator}#{$fractions-delimiter}#{$denominator}#{$breakpoint} {
          position: relative $important;
          right: auto $important;
          left: ($numerator / $denominator) * 100% $important;
        }

        // build a class in the format `.w-pull-5/6[@<breakpoint>]`
        .w-pull-#{$numerator}#{$fractions-delimiter}#{$denominator}#{$breakpoint} {
          position: relative $important;
          right: ($numerator / $denominator) * 100% $important;
          left: auto $important;
        }
      }
    }
  }
}